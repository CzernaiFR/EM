styler:::set_style_transformers()
1 + 1
quarto::quarto_render()
library(tidyverse)
#| echo: false
library(tidyverse)
#| echo: fenced
#| output: true
library(tidyverse)
#| output: false
library(tidyverse, warn.conflicts = FALSE)
adresse_Fichiers <-
c("https://media.fdj.fr/static-draws/csv/euromillions/euromillions_201609.zip",
"https://media.fdj.fr/static-draws/csv/euromillions/euromillions_201902.zip",
"https://media.fdj.fr/static-draws/csv/euromillions/euromillions_202002.zip")
# noms sous lesquels les fichiers .zip seront
#   stockés sur disque
fichiers_Provisoires <- c("eurom1.zip",
"eurom2.zip",
"eurom3.zip")
# noms sous lesquels les fichiers .csv seront
#   stockés sur disque
fichiers_Csv <- c("eurom1.csv",
"eurom2.csv",
"eurom3.csv")
map2(adressFic,
noms_provisoires,
~ download.file(.x, destfile = .y))
#| output: false
library(tidyverse, warn.conflicts = FALSE)
adresses_Fichiers <-
c("https://media.fdj.fr/static-draws/csv/euromillions/euromillions_201609.zip",
"https://media.fdj.fr/static-draws/csv/euromillions/euromillions_201902.zip",
"https://media.fdj.fr/static-draws/csv/euromillions/euromillions_202002.zip")
# noms sous lesquels les fichiers .zip seront
#   stockés sur disque
fichiers_Provisoires <- c("eurom1.zip",
"eurom2.zip",
"eurom3.zip")
# noms sous lesquels les fichiers .csv seront
#   stockés sur disque
fichiers_Csv <- c("eurom1.csv",
"eurom2.csv",
"eurom3.csv")
map2(adresses_Fichiers,
fichiers_Provisoires,
~ download.file(.x, destfile = .y))
noms_fdj <- map(Fichiers_Provisoires, ~ unzip(.x, list = TRUE))
#| output: false
library(tidyverse, warn.conflicts = FALSE)
adresses_Fichiers <-
c("https://media.fdj.fr/static-draws/csv/euromillions/euromillions_201609.zip",
"https://media.fdj.fr/static-draws/csv/euromillions/euromillions_201902.zip",
"https://media.fdj.fr/static-draws/csv/euromillions/euromillions_202002.zip")
# noms sous lesquels les fichiers .zip seront
#   stockés sur disque
fichiers_Provisoires <- c("eurom1.zip",
"eurom2.zip",
"eurom3.zip")
# noms sous lesquels les fichiers .csv seront
#   stockés sur disque
fichiers_Csv <- c("eurom1.csv",
"eurom2.csv",
"eurom3.csv")
map2(adresses_Fichiers,
fichiers_Provisoires,
~ download.file(.x, destfile = .y))
noms_fdj <- map(fichiers_Provisoires, ~ unzip(.x, list = TRUE))
noms_fdj
View(noms_fdj)
#| message: false
#| warning: false
# la boucle
for (i in 1:3) {
# récup du nom FDJ
nom <- noms_fdj[[i]]$Name
# dézipper
unzip(noms_provisoires[i])
# renommer
file.rename(from = nom, to = noms_csv[i])
# supprimer le fichier zip
file.remove(noms_provisoires[i])
}
#| message: false
#| warning: false
# la boucle
for (i in 1:3) {
# récup du nom FDJ
nom <- noms_fdj[[i]]$Name
# dézipper
unzip(fichiers_Provisoires[i])
# renommer
file.rename(from = nom, to = noms_csv[i])
# supprimer le fichier zip
file.remove(noms_provisoires[i])
}
#| message: false
#| warning: false
# la boucle
for (i in 1:3) {
# récup du nom FDJ
nom <- noms_fdj[[i]]$Name
# dézipper
unzip(fichiers_Provisoires[i])
# renommer
file.rename(from = nom, to = noms_csv[i])
# supprimer le fichier zip
file.remove(noms_provisoires[i])
}
#| output: false
library(tidyverse, warn.conflicts = FALSE)
adresses_Fichiers <-
c("https://media.fdj.fr/static-draws/csv/euromillions/euromillions_201609.zip",
"https://media.fdj.fr/static-draws/csv/euromillions/euromillions_201902.zip",
"https://media.fdj.fr/static-draws/csv/euromillions/euromillions_202002.zip")
# noms sous lesquels les fichiers .zip seront
#   stockés sur disque
fichiers_Provisoires <- c("eurom1.zip",
"eurom2.zip",
"eurom3.zip")
# noms sous lesquels les fichiers .csv seront
#   stockés sur disque
fichiers_Csv <- c("eurom1.csv",
"eurom2.csv",
"eurom3.csv")
map2(adresses_Fichiers,
fichiers_Provisoires,
~ download.file(.x, destfile = .y))
noms_fdj <- map(fichiers_Provisoires, ~ unzip(.x, list = TRUE))
noms_fdj
#| message: false
#| warning: false
# la boucle
for (i in 1:3) {
# récup du nom FDJ
nom <- noms_fdj[[i]]$Name
# dézipper
unzip(fichiers_Provisoires[i])
# renommer
file.rename(from = nom, to = fichiers_Csv[i])
# supprimer le fichier zip
file.remove(fichiers_Provisoires[i])
}
#| output: false
library(tidyverse, warn.conflicts = FALSE)
adresses_Fichiers <-
c("https://media.fdj.fr/static-draws/csv/euromillions/euromillions_201609.zip",
"https://media.fdj.fr/static-draws/csv/euromillions/euromillions_201902.zip",
"https://media.fdj.fr/static-draws/csv/euromillions/euromillions_202002.zip")
# noms sous lesquels les fichiers .zip seront
#   stockés sur disque
fichiers_Provisoires <- c("eurom1.zip",
"eurom2.zip",
"eurom3.zip")
# noms sous lesquels les fichiers .csv seront
#   stockés sur disque
fichiers_Csv <- c("eurom1.csv",
"eurom2.csv",
"eurom3.csv")
map2(adresses_Fichiers,
fichiers_Provisoires,
~ download.file(.x, destfile = .y))
noms_fdj <- map(fichiers_Provisoires, ~ unzip(.x, list = TRUE))
noms_fdj
#| message: false
#| warning: false
# la boucle
for (i in 1:3) {
# récup du nom FDJ
nom <- noms_fdj[[i]]$Name
# dézipper
unzip(fichiers_Provisoires[i])
# renommer
file.rename(from = nom, to = fichiers_Csv[i])
# supprimer le fichier zip
file.remove(fichiers_Provisoires[i])
}
file.append("eurom1.csv", "eurom2.csv")
file.append("eurom1.csv", "eurom3.csv")
eurom <- read_csv2("eurom1.csv", show_col_types = FALSE)
a_row <- nrow(eurom)
a_col <- ncol(eurom)
cat(a_row, "lignes et", a_col, "colonnes")
#| output: false
library(tidyverse, warn.conflicts = FALSE)
adresses_Fichiers <-
c("https://media.fdj.fr/static-draws/csv/euromillions/euromillions_201609.zip",
"https://media.fdj.fr/static-draws/csv/euromillions/euromillions_201902.zip",
"https://media.fdj.fr/static-draws/csv/euromillions/euromillions_202002.zip")
# noms sous lesquels les fichiers .zip seront
#   stockés sur disque
fichiers_Provisoires <- c("eurom1.zip",
"eurom2.zip",
"eurom3.zip")
# noms sous lesquels les fichiers .csv seront
#   stockés sur disque
fichiers_Csv <- c("eurom1.csv",
"eurom2.csv",
"eurom3.csv")
map2(adresses_Fichiers,
fichiers_Provisoires,
~ download.file(.x, destfile = .y))
noms_fdj <- map(fichiers_Provisoires, ~ unzip(.x, list = TRUE))
noms_fdj
#| message: false
#| warning: false
# la boucle
for (i in 1:3) {
# récup du nom FDJ
nom <- noms_fdj[[i]]$Name
# dézipper
unzip(fichiers_Provisoires[i])
# renommer
file.rename(from = nom, to = fichiers_Csv[i])
# supprimer le fichier zip
file.remove(fichiers_Provisoires[i])
}
#| output: false
file.append("eurom1.csv", "eurom2.csv")
file.append("eurom1.csv", "eurom3.csv")
eurom <- read_csv2("eurom1.csv", show_col_types = FALSE)
a_row <- nrow(eurom)
a_col <- ncol(eurom)
cat(a_row, "lignes et", a_col, "colonnes")
euromil <-
eurom |>
select(jour_de_tirage,
date_de_tirage,
boule_1, boule_2, boule_3, boule_4, boule_5,
etoile_1, etoile_2
)
euromil <- arrange(euromil, desc(date_de_tirage))
head(euromil)
# a_row contient toujours le nombre de lignes
# récupérer de la troisième à la dernière ligne
euromil <- slice(euromil, 3:a_row)
head(euromil)
tail(euromil)
euromil <-
euromil %>%
rename(jt = jour_de_tirage,
dt = date_de_tirage,
b1 = boule_1, b2 = boule_2, b3 = boule_3,
b4 = boule_4, b5 = boule_5,
e1 = etoile_1, e2 = etoile_2)
euromil
euromil$jt <- str_sub(euromil$jt, 1,2)
euromil$dt <- dmy(euromil$dt)
euromil$jt <- as.factor(euromil$jt)
euromil$b1 <- as.integer(euromil$b1)
euromil$b2 <- as.integer(euromil$b2)
euromil$b3 <- as.integer(euromil$b3)
euromil$b4 <- as.integer(euromil$b4)
euromil$b5 <- as.integer(euromil$b5)
euromil$e1 <- as.integer(euromil$e1)
euromil$e2 <- as.integer(euromil$e2)
euromil <- arrange(euromil, dt)
summary(euromil)
rien <-
euromil %>%
rowwise() %>%
mutate(rB = pmap(list(b1, b2, b3, b4, b5), lift_vd(sort))) %>%
mutate(rE = pmap(list(e1, e2), lift_vd(sort)))
euromil <-
rien |>
rowwise() |>
mutate(b1 = rB[1]) |>
mutate(b2 = rB[2]) |>
mutate(b3 = rB[3]) |>
mutate(b4 = rB[4]) |>
mutate(b5 = rB[5]) |>
mutate(e1 = rE[1]) |>
mutate(e2 = rE[2])
euromil$rB <- NULL
euromil$rE <- NULL
summary(euromil)
euromil <- ungroup(euromil)
save(euromil, file = "euromil.rda")
View(euromil)
#| output: false
library(tidyverse, warn.conflicts = FALSE)
adresses_Fichiers <-
c("https://media.fdj.fr/static-draws/csv/euromillions/euromillions_201609.zip",
"https://media.fdj.fr/static-draws/csv/euromillions/euromillions_201902.zip",
"https://media.fdj.fr/static-draws/csv/euromillions/euromillions_202002.zip")
# noms sous lesquels les fichiers .zip seront
#   stockés sur disque
fichiers_Provisoires <- c("eurom1.zip",
"eurom2.zip",
"eurom3.zip")
# noms sous lesquels les fichiers .csv seront
#   stockés sur disque
fichiers_Csv <- c("eurom1.csv",
"eurom2.csv",
"eurom3.csv")
map2(adresses_Fichiers,
fichiers_Provisoires,
~ download.file(.x, destfile = .y))
noms_fdj <- map(fichiers_Provisoires, ~ unzip(.x, list = TRUE))
noms_fdj
#| message: false
#| warning: false
# la boucle
for (i in 1:3) {
# récup du nom FDJ
nom <- noms_fdj[[i]]$Name
# dézipper
unzip(fichiers_Provisoires[i])
# renommer
file.rename(from = nom, to = fichiers_Csv[i])
# supprimer le fichier zip
file.remove(fichiers_Provisoires[i])
}
#| output: false
file.append("eurom1.csv", "eurom2.csv")
file.append("eurom1.csv", "eurom3.csv")
eurom <- read_csv2("eurom1.csv", show_col_types = FALSE)
a_row <- nrow(eurom)
a_col <- ncol(eurom)
cat(a_row, "lignes et", a_col, "colonnes")
euromil <-
eurom |>
select(jour_de_tirage,
date_de_tirage,
boule_1, boule_2, boule_3, boule_4, boule_5,
etoile_1, etoile_2
)
euromil <- arrange(euromil, desc(date_de_tirage))
head(euromil)
# a_row contient toujours le nombre de lignes
# récupérer de la troisième à la dernière ligne
euromil <- slice(euromil, 3:a_row)
head(euromil)
tail(euromil)
euromil <-
euromil %>%
rename(jt = jour_de_tirage,
dt = date_de_tirage,
b1 = boule_1, b2 = boule_2, b3 = boule_3,
b4 = boule_4, b5 = boule_5,
e1 = etoile_1, e2 = etoile_2)
euromil
euromil$jt <- str_sub(euromil$jt, 1,2)
euromil$dt <- dmy(euromil$dt)
euromil$jt <- as.factor(euromil$jt)
euromil$b1 <- as.integer(euromil$b1)
euromil$b2 <- as.integer(euromil$b2)
euromil$b3 <- as.integer(euromil$b3)
euromil$b4 <- as.integer(euromil$b4)
euromil$b5 <- as.integer(euromil$b5)
euromil$e1 <- as.integer(euromil$e1)
euromil$e2 <- as.integer(euromil$e2)
euromil <- arrange(euromil, dt)
summary(euromil)
rien <-
euromil %>%
rowwise() %>%
mutate(rB = pmap(list(b1, b2, b3, b4, b5), lift_vd(sort))) %>%
mutate(rE = pmap(list(e1, e2), lift_vd(sort)))
euromil <-
rien |>
rowwise() |>
mutate(b1 = rB[1]) |>
mutate(b2 = rB[2]) |>
mutate(b3 = rB[3]) |>
mutate(b4 = rB[4]) |>
mutate(b5 = rB[5]) |>
mutate(e1 = rE[1]) |>
mutate(e2 = rE[2])
euromil$rB <- NULL
euromil$rE <- NULL
summary(euromil)
euromil <- ungroup(euromil)
save(euromil, file = "euromil.rda")
remove(list = ls())
#| output: false
library(tidyverse, warn.conflicts = FALSE)
adresses_Fichiers <-
c("https://media.fdj.fr/static-draws/csv/euromillions/euromillions_201609.zip",
"https://media.fdj.fr/static-draws/csv/euromillions/euromillions_201902.zip",
"https://media.fdj.fr/static-draws/csv/euromillions/euromillions_202002.zip")
# noms sous lesquels les fichiers .zip seront
#   stockés sur disque
fichiers_Provisoires <- c("eurom1.zip",
"eurom2.zip",
"eurom3.zip")
# noms sous lesquels les fichiers .csv seront
#   stockés sur disque
fichiers_Csv <- c("eurom1.csv",
"eurom2.csv",
"eurom3.csv")
map2(adresses_Fichiers,
fichiers_Provisoires,
~ download.file(.x, destfile = .y))
noms_fdj <- map(fichiers_Provisoires, ~ unzip(.x, list = TRUE))
noms_fdj
#| message: false
#| warning: false
# la boucle
for (i in 1:3) {
# récup du nom FDJ
nom <- noms_fdj[[i]]$Name
# dézipper
unzip(fichiers_Provisoires[i])
# renommer
file.rename(from = nom, to = fichiers_Csv[i])
# supprimer le fichier zip
file.remove(fichiers_Provisoires[i])
}
#| output: false
file.append("eurom1.csv", "eurom2.csv")
file.append("eurom1.csv", "eurom3.csv")
eurom <- read_csv2("eurom1.csv", show_col_types = FALSE)
a_row <- nrow(eurom)
a_col <- ncol(eurom)
cat(a_row, "lignes et", a_col, "colonnes")
euromil <-
eurom |>
select(jour_de_tirage,
date_de_tirage,
boule_1, boule_2, boule_3, boule_4, boule_5,
etoile_1, etoile_2
)
euromil <- arrange(euromil, desc(date_de_tirage))
head(euromil)
# a_row contient toujours le nombre de lignes
# récupérer de la troisième à la dernière ligne
euromil <- slice(euromil, 3:a_row)
head(euromil)
tail(euromil)
euromil <-
euromil %>%
rename(jt = jour_de_tirage,
dt = date_de_tirage,
b1 = boule_1, b2 = boule_2, b3 = boule_3,
b4 = boule_4, b5 = boule_5,
e1 = etoile_1, e2 = etoile_2)
euromil
euromil$jt <- str_sub(euromil$jt, 1,2)
euromil$dt <- dmy(euromil$dt)
euromil$jt <- as.factor(euromil$jt)
euromil$b1 <- as.integer(euromil$b1)
euromil$b2 <- as.integer(euromil$b2)
euromil$b3 <- as.integer(euromil$b3)
euromil$b4 <- as.integer(euromil$b4)
euromil$b5 <- as.integer(euromil$b5)
euromil$e1 <- as.integer(euromil$e1)
euromil$e2 <- as.integer(euromil$e2)
euromil <- arrange(euromil, dt)
summary(euromil)
rien <-
euromil %>%
rowwise() %>%
mutate(rB = pmap(list(b1, b2, b3, b4, b5), lift_vd(sort))) %>%
mutate(rE = pmap(list(e1, e2), lift_vd(sort)))
euromil <-
rien |>
rowwise() |>
mutate(b1 = rB[1]) |>
mutate(b2 = rB[2]) |>
mutate(b3 = rB[3]) |>
mutate(b4 = rB[4]) |>
mutate(b5 = rB[5]) |>
mutate(e1 = rE[1]) |>
mutate(e2 = rE[2])
euromil$rB <- NULL
euromil$rE <- NULL
summary(euromil)
euromil <- ungroup(euromil)
save(euromil, file = "euromil.RData")
remove(list = ls())
