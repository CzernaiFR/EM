#| message: false
#| warning: false
# la boucle
for (i in 1:3) {
# récup du nom FDJ
nom <- noms_fdj[[i]]$Name
# dézipper
unzip(fichiers_Provisoires[i])
# renommer
file.rename(from = nom, to = fichiers_Csv[i])
# supprimer le fichier zip
file.remove(fichiers_Provisoires[i])
}
#| output: false
file.append("eurom1.csv", "eurom2.csv")
file.append("eurom1.csv", "eurom3.csv")
eurom <- read_csv2("eurom1.csv", show_col_types = FALSE)
a_row <- nrow(eurom)
a_col <- ncol(eurom)
cat(a_row, "lignes et", a_col, "colonnes")
euromil <-
eurom |>
select(jour_de_tirage,
date_de_tirage,
boule_1, boule_2, boule_3, boule_4, boule_5,
etoile_1, etoile_2
)
euromil <- arrange(euromil, desc(date_de_tirage))
head(euromil)
# a_row contient toujours le nombre de lignes
# récupérer de la troisième à la dernière ligne
euromil <- slice(euromil, 3:a_row)
head(euromil)
tail(euromil)
euromil <-
euromil %>%
rename(jt = jour_de_tirage,
dt = date_de_tirage,
b1 = boule_1, b2 = boule_2, b3 = boule_3,
b4 = boule_4, b5 = boule_5,
e1 = etoile_1, e2 = etoile_2)
euromil
euromil$jt <- str_sub(euromil$jt, 1,2)
euromil$dt <- dmy(euromil$dt)
euromil$jt <- as.factor(euromil$jt)
euromil$b1 <- as.integer(euromil$b1)
euromil$b2 <- as.integer(euromil$b2)
euromil$b3 <- as.integer(euromil$b3)
euromil$b4 <- as.integer(euromil$b4)
euromil$b5 <- as.integer(euromil$b5)
euromil$e1 <- as.integer(euromil$e1)
euromil$e2 <- as.integer(euromil$e2)
euromil <- arrange(euromil, dt)
summary(euromil)
rien <-
euromil %>%
rowwise() %>%
mutate(rB = pmap(list(b1, b2, b3, b4, b5), lift_vd(sort))) %>%
mutate(rE = pmap(list(e1, e2), lift_vd(sort)))
euromil <-
rien |>
rowwise() |>
mutate(b1 = rB[1]) |>
mutate(b2 = rB[2]) |>
mutate(b3 = rB[3]) |>
mutate(b4 = rB[4]) |>
mutate(b5 = rB[5]) |>
mutate(e1 = rE[1]) |>
mutate(e2 = rE[2])
euromil$rB <- NULL
euromil$rE <- NULL
summary(euromil)
euromil <- ungroup(euromil)
save(euromil, file = "euromil.RData")
remove(list = ls())
load("~/PROJETS/EM/euromil.RData")
library(tidyverse, quietly = TRUE, warn.conflicts = FALSE)
num <- tibble(numero = 1:50,
So_MA = 0, So_VE = 0, So_TO = 0,
Ec_MA = 0, Ec_VE = 0, Ec_TO = 0)
eto <- tibble(etoile = 1:12,
So_MA = 0, So_VE = 0, So_TO = 0,
Ec_MA = 0, Ec_VE = 0, Ec_TO = 0)
for (i in 1:150) {
a <-
euromil |>
slice(i)
j <- a$jt
b <- c(a$b1, a$b2, a$b3, a$b4, a$b5)
e <- c(a$e1, a$e2)
# pour être sûr que les jours ne soient QUE MA ou VE
#   un petit test ne fait pas de mal
flag_jour <- FALSE
# pour les tirages du MArdi
if (j == "MA") {
flag_jour <- TRUE
# incrémente les sorties des numéros
num$So_MA[b] <- num$So_MA[b] + 1
# incrémente les sorties des étoiles
eto$So_MA[e] <- eto$So_MA[e] + 1
# incrémente tous les écarts des numéros
num$Ec_MA <- num$Ec_MA + 1
# incrémente tous les écarts des étoiles
eto$Ec_MA <- eto$Ec_MA + 1
# met les écarts des numéros sortis à 0
num$Ec_MA[b] <- 0
# met les écarts des étoiles sorties à 0
eto$Ec_MA[e] <- 0
}   # fin du test   if (j == "MA")
# pour les tirages du VEndredi
if (j == "VE") {
flag_jour <- TRUE
# incrémente les sorties des numéros
num$So_VE[b] <- num$So_VE[b] + 1
# incrémente les sorties des étoiles
eto$So_VE[e] <- eto$So_VE[e] + 1
# incrémente tous les écarts des numéros
num$Ec_VE <- num$Ec_VE + 1
# incrémente tous les écarts des étoiles
eto$Ec_VE <- eto$Ec_VE + 1
# met les écarts des numéros sortis à 0
num$Ec_VE[b] <- 0
# met les écarts des étoiles sorties à 0
eto$Ec_VE[e] <- 0
}   # fin du test   if (j == "VE")
# si c'est bien un MA ou un VE qui a été
#   traité avant
# traite les tirages en TOut
if (flag_jour == TRUE)  {
# incrémente les sorties des numéros
num$So_TO[b] <- num$So_TO[b] + 1
# incrémente les sorties des étoiles
eto$So_TO[e] <- eto$So_TO[e] + 1
# incrémente tous les écarts des numéros
num$Ec_TO <- num$Ec_TO + 1
# incrémente tous les écarts des étoiles
eto$Ec_TO <- eto$Ec_TO + 1
# met les écarts des numéros sortis à 0
num$Ec_TO[b] <- 0
# met les écarts des étoiles sorties à 0
eto$Ec_TO[e] <- 0
}   # fin du test   if (flag_jour == TRUE)
else  {
# si le test du jour a raté
# afficher le tirage incriminé
print("HORREUR, Y A ERREUR !!!!!!!!!")
print(a)
# et on arrête tout
break
}   # fin du else
}   # fin de la boucle  for (i in 1:XX)
#| echo: false
summary(num$So_MA)
#| echo: false
summary(num$So_VE)
#| echo: false
summary(num$So_TO)
#| echo: false
summary(eto$So_MA)
#| echo: false
summary(eto$So_VE)
#| echo: false
summary(eto$So_TO)
head(num)
num_long <-
num |>
select(numero:So_VE) |>
pivot_longer(cols = c(So_MA, So_VE),
values_to = "sorties",
names_to = "jour")
eto_long <-
eto |>
select(etoile:So_VE) |>
pivot_longer(cols = So_MA:So_VE,
values_to = "sorties",
names_to = "jour")
num_long
eto_long
ggplot(eto_long) +
aes(x = factor(etoile),
y = sorties,
fill = jour) +
geom_bar(stat = "summary",
fun = "sum",
position = "dodge2") +
labs(
x = "étoiles",
y = "nombre de sorties",
title = "Nombres de sorties par jour des étoiles"
)
num_long1 <-
num_long |>
slice(1:50)
num_long2 <-
num_long |>
slice(51:100)
ggplot(num_long1) +
aes(x = factor(numero),
y = sorties,
fill = jour) +
geom_bar(stat = "summary",
fun = "sum",
position = "dodge2") +
labs(
x = "numéros de 1 à 25",
y = "nombre de sorties",
title = "Nombres de sorties par jour des numéros de 1 à 25"
)
ggplot(num_long2) +
aes(x = factor(numero),
y = sorties,
fill = jour) +
geom_bar(stat = "summary",
fun = "sum",
position = "dodge2") +
labs(
x = "numéros de 26 à 50",
y = "nombre de sorties",
title = "Nombres de sorties par jour des numéros de 26 à 50"
)
load("~/PROJETS/EM/euromil.RData")
library(tidyverse, quietly = TRUE, warn.conflicts = FALSE)
num <- tibble(numero = 1:50,
So_MA = 0, So_VE = 0, So_TO = 0,
Ec_MA = 0, Ec_VE = 0, Ec_TO = 0)
eto <- tibble(etoile = 1:12,
So_MA = 0, So_VE = 0, So_TO = 0,
Ec_MA = 0, Ec_VE = 0, Ec_TO = 0)
for (i in 1:150) {
a <-
euromil |>
slice(i)
j <- a$jt
b <- c(a$b1, a$b2, a$b3, a$b4, a$b5)
e <- c(a$e1, a$e2)
# pour être sûr que les jours ne soient QUE MA ou VE
#   un petit test ne fait pas de mal
flag_jour <- FALSE
# pour les tirages du MArdi
if (j == "MA") {
flag_jour <- TRUE
# incrémente les sorties des numéros
num$So_MA[b] <- num$So_MA[b] + 1
# incrémente les sorties des étoiles
eto$So_MA[e] <- eto$So_MA[e] + 1
# incrémente tous les écarts des numéros
num$Ec_MA <- num$Ec_MA + 1
# incrémente tous les écarts des étoiles
eto$Ec_MA <- eto$Ec_MA + 1
# met les écarts des numéros sortis à 0
num$Ec_MA[b] <- 0
# met les écarts des étoiles sorties à 0
eto$Ec_MA[e] <- 0
}   # fin du test   if (j == "MA")
# pour les tirages du VEndredi
if (j == "VE") {
flag_jour <- TRUE
# incrémente les sorties des numéros
num$So_VE[b] <- num$So_VE[b] + 1
# incrémente les sorties des étoiles
eto$So_VE[e] <- eto$So_VE[e] + 1
# incrémente tous les écarts des numéros
num$Ec_VE <- num$Ec_VE + 1
# incrémente tous les écarts des étoiles
eto$Ec_VE <- eto$Ec_VE + 1
# met les écarts des numéros sortis à 0
num$Ec_VE[b] <- 0
# met les écarts des étoiles sorties à 0
eto$Ec_VE[e] <- 0
}   # fin du test   if (j == "VE")
# si c'est bien un MA ou un VE qui a été
#   traité avant
# traite les tirages en TOut
if (flag_jour == TRUE)  {
# incrémente les sorties des numéros
num$So_TO[b] <- num$So_TO[b] + 1
# incrémente les sorties des étoiles
eto$So_TO[e] <- eto$So_TO[e] + 1
# incrémente tous les écarts des numéros
num$Ec_TO <- num$Ec_TO + 1
# incrémente tous les écarts des étoiles
eto$Ec_TO <- eto$Ec_TO + 1
# met les écarts des numéros sortis à 0
num$Ec_TO[b] <- 0
# met les écarts des étoiles sorties à 0
eto$Ec_TO[e] <- 0
}   # fin du test   if (flag_jour == TRUE)
else  {
# si le test du jour a raté
# afficher le tirage incriminé
print("HORREUR, Y A ERREUR !!!!!!!!!")
print(a)
# et on arrête tout
break
}   # fin du else
}   # fin de la boucle  for (i in 1:XX)
#| echo: false
summary(num$So_MA)
#| echo: false
summary(num$So_VE)
#| echo: false
summary(num$So_TO)
#| echo: false
summary(eto$So_MA)
#| echo: false
summary(eto$So_VE)
#| echo: false
summary(eto$So_TO)
head(num)
num_long <-
num |>
select(numero:So_VE) |>
pivot_longer(cols = c(So_MA, So_VE),
values_to = "sorties",
names_to = "jour")
eto_long <-
eto |>
select(etoile:So_VE) |>
pivot_longer(cols = So_MA:So_VE,
values_to = "sorties",
names_to = "jour")
num_long
eto_long
ggplot(eto_long) +
aes(x = factor(etoile),
y = sorties,
fill = jour) +
geom_bar(stat = "summary",
fun = "sum",
position = "dodge2") +
labs(
x = "étoiles",
y = "nombre de sorties",
title = "Nombres de sorties par jour des étoiles"
)
num_long1 <-
num_long |>
slice(1:50)
num_long2 <-
num_long |>
slice(51:100)
ggplot(num_long1) +
aes(x = factor(numero),
y = sorties,
fill = jour) +
geom_bar(stat = "summary",
fun = "sum",
position = "dodge2") +
labs(
x = "numéros de 1 à 25",
y = "nombre de sorties",
title = "Nombres de sorties par jour des numéros de 1 à 25"
)
ggplot(num_long2) +
aes(x = factor(numero),
y = sorties,
fill = jour) +
geom_bar(stat = "summary",
fun = "sum",
position = "dodge2") +
labs(
x = "numéros de 26 à 50",
y = "nombre de sorties",
title = "Nombres de sorties par jour des numéros de 26 à 50"
)
load("~/PROJETS/EM/euromil.RData")
library(tidyverse, quietly = TRUE, warn.conflicts = FALSE)
num <- tibble(numero = 1:50,
So_MA = 0, So_VE = 0, So_TO = 0,
Ec_MA = 0, Ec_VE = 0, Ec_TO = 0)
eto <- tibble(etoile = 1:12,
So_MA = 0, So_VE = 0, So_TO = 0,
Ec_MA = 0, Ec_VE = 0, Ec_TO = 0)
for (i in 1:150) {
a <-
euromil |>
slice(i)
j <- a$jt
b <- c(a$b1, a$b2, a$b3, a$b4, a$b5)
e <- c(a$e1, a$e2)
# pour être sûr que les jours ne soient QUE MA ou VE
#   un petit test ne fait pas de mal
flag_jour <- FALSE
# pour les tirages du MArdi
if (j == "MA") {
flag_jour <- TRUE
# incrémente les sorties des numéros
num$So_MA[b] <- num$So_MA[b] + 1
# incrémente les sorties des étoiles
eto$So_MA[e] <- eto$So_MA[e] + 1
# incrémente tous les écarts des numéros
num$Ec_MA <- num$Ec_MA + 1
# incrémente tous les écarts des étoiles
eto$Ec_MA <- eto$Ec_MA + 1
# met les écarts des numéros sortis à 0
num$Ec_MA[b] <- 0
# met les écarts des étoiles sorties à 0
eto$Ec_MA[e] <- 0
}   # fin du test   if (j == "MA")
# pour les tirages du VEndredi
if (j == "VE") {
flag_jour <- TRUE
# incrémente les sorties des numéros
num$So_VE[b] <- num$So_VE[b] + 1
# incrémente les sorties des étoiles
eto$So_VE[e] <- eto$So_VE[e] + 1
# incrémente tous les écarts des numéros
num$Ec_VE <- num$Ec_VE + 1
# incrémente tous les écarts des étoiles
eto$Ec_VE <- eto$Ec_VE + 1
# met les écarts des numéros sortis à 0
num$Ec_VE[b] <- 0
# met les écarts des étoiles sorties à 0
eto$Ec_VE[e] <- 0
}   # fin du test   if (j == "VE")
# si c'est bien un MA ou un VE qui a été
#   traité avant
# traite les tirages en TOut
if (flag_jour == TRUE)  {
# incrémente les sorties des numéros
num$So_TO[b] <- num$So_TO[b] + 1
# incrémente les sorties des étoiles
eto$So_TO[e] <- eto$So_TO[e] + 1
# incrémente tous les écarts des numéros
num$Ec_TO <- num$Ec_TO + 1
# incrémente tous les écarts des étoiles
eto$Ec_TO <- eto$Ec_TO + 1
# met les écarts des numéros sortis à 0
num$Ec_TO[b] <- 0
# met les écarts des étoiles sorties à 0
eto$Ec_TO[e] <- 0
}   # fin du test   if (flag_jour == TRUE)
else  {
# si le test du jour a raté
# afficher le tirage incriminé
print("HORREUR, Y A ERREUR !!!!!!!!!")
print(a)
# et on arrête tout
break
}   # fin du else
}   # fin de la boucle  for (i in 1:XX)
#| echo: false
summary(num$So_MA)
#| echo: false
summary(num$So_VE)
#| echo: false
summary(num$So_TO)
#| echo: false
summary(eto$So_MA)
#| echo: false
summary(eto$So_VE)
#| echo: false
summary(eto$So_TO)
head(num)
num_long <-
num |>
select(numero:So_VE) |>
pivot_longer(cols = c(So_MA, So_VE),
values_to = "sorties",
names_to = "jour")
eto_long <-
eto |>
select(etoile:So_VE) |>
pivot_longer(cols = So_MA:So_VE,
values_to = "sorties",
names_to = "jour")
num_long
eto_long
ggplot(eto_long) +
aes(x = factor(etoile),
y = sorties,
fill = jour) +
geom_bar(stat = "summary",
fun = "sum",
position = "dodge2") +
labs(
x = "étoiles",
y = "nombre de sorties",
title = "Nombres de sorties par jour des étoiles"
)
num_long1 <-
num_long |>
slice(1:50)
num_long2 <-
num_long |>
slice(51:100)
ggplot(num_long1) +
aes(x = factor(numero),
y = sorties,
fill = jour) +
geom_bar(stat = "summary",
fun = "sum",
position = "dodge2") +
labs(
x = "numéros de 1 à 25",
y = "nombre de sorties",
title = "Nombres de sorties par jour des numéros de 1 à 25"
)
ggplot(num_long2) +
aes(x = factor(numero),
y = sorties,
fill = jour) +
geom_bar(stat = "summary",
fun = "sum",
position = "dodge2") +
labs(
x = "numéros de 26 à 50",
y = "nombre de sorties",
title = "Nombres de sorties par jour des numéros de 26 à 50"
)
install.packages("quarto")
install.packages(c("bayestestR", "bitops", "bslib", "checkmate", "colorspace", "datawizard", "future", "gtsummary", "insight", "parallelly", "parameters", "performance", "quarto", "Rcpp", "rio", "s2", "see", "shiny", "SparseM", "tidycensus", "tinytex", "uuid", "xfun", "yaml"))
