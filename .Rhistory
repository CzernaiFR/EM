eto$S_TO[e] <- eto$S_TO[e] + 1
# incrémente tous les écarts des numéros
num$E_TO <- num$E_TO + 1
# incrémente tous les écarts des étoiles
eto$E_TO <- eto$E_TO + 1
# met les écarts des numéros sortis à 0
num$E_TO[b] <- 0
# met les écarts des étoiles sorties à 0
eto$E_TO[e] <- 0
}   # fin du test   if (flag_jour == TRUE)
else  {
# si le test du jour a raté
# afficher le tirage incriminé
print(a)
# et on arrête tout
break
}   # fin du else
}   # fin de la boucle  for (i in 1:XX)
summary(num$S_MA)
summary(num$S_VE)
summary(num$S_TO)
summary(eto$S_MA)
summary(eto$S_VE)
summary(eto$S_TO)
num
classe_num <- function() {
tibble(n = 1:50,
S_MA = round(cume_dist(num$S_MA) * 100),
S_VE = round(cume_dist(num$S_VE) * 100),
S_TO = round(cume_dist(num$S_TO) * 100),
E_MA = round(cume_dist(num$E_MA) * 100),
E_VE = round(cume_dist(num$E_VE) * 100),
E_TO = round(cume_dist(num$E_TO) * 100)
)
}
C_num <- classe_num()
print(C_num)
load("~/PROJETS/EM/euromil.RData")
library(tidyverse, quietly = TRUE, warn.conflicts = FALSE)
load("~/PROJETS/EM/euromil.RData")
library(tidyverse, quietly = TRUE, warn.conflicts = FALSE)
load("~/PROJETS/EM/euromil.RData")
library(tidyverse, quietly = TRUE, warn.conflicts = FALSE)
num <- tibble(n = 1:50,
S_MA = 0, S_VE = 0, S_TO = 0,
E_MA = 0, E_VE = 0, E_TO = 0)
eto <- tibble(n = 1:12,
S_MA = 0, S_VE = 0, S_TO = 0,
E_MA = 0, E_VE = 0, E_TO = 0)
for (i in 1:100) {
a <-
euromil |>
slice(i)
j <- a$jt
b <- c(a$b1, a$b2, a$b3, a$b4, a$b5)
e <- c(a$e1, a$e2)
# pour être sûr que les jours ne soient QUE MA ou VE
#   un petit test ne fait pas de mal
flag_jour <- FALSE
# pour les tirages du MArdi
if (j == "MA") {
flag_jour <- TRUE
# incrémente les sorties des numéros
num$S_MA[b] <- num$S_MA[b] + 1
# incrémente les sorties des étoiles
eto$S_MA[e] <- eto$S_MA[e] + 1
# incrémente tous les écarts des numéros
num$E_MA <- num$E_MA + 1
# incrémente tous les écarts des étoiles
eto$E_MA <- eto$E_MA + 1
# met les écarts des numéros sortis à 0
num$E_MA[b] <- 0
# met les écarts des étoiles sorties à 0
eto$E_MA[e] <- 0
}   # fin du test   if (j == "MA")
# pour les tirages du VEndredi
if (j == "VE") {
flag_jour <- TRUE
# incrémente les sorties des numéros
num$S_VE[b] <- num$S_VE[b] + 1
# incrémente les sorties des étoiles
eto$S_VE[e] <- eto$S_VE[e] + 1
# incrémente tous les écarts des numéros
num$E_VE <- num$E_VE + 1
# incrémente tous les écarts des étoiles
eto$E_VE <- eto$E_VE + 1
# met les écarts des numéros sortis à 0
num$E_VE[b] <- 0
# met les écarts des étoiles sorties à 0
eto$E_VE[e] <- 0
}   # fin du test   if (j == "VE")
# si c'est bien un MA ou un VE qui a été
#   traité avant
# traite les tirages en TOut
if (flag_jour == TRUE)  {
# incrémente les sorties des numéros
num$S_TO[b] <- num$S_TO[b] + 1
# incrémente les sorties des étoiles
eto$S_TO[e] <- eto$S_TO[e] + 1
# incrémente tous les écarts des numéros
num$E_TO <- num$E_TO + 1
# incrémente tous les écarts des étoiles
eto$E_TO <- eto$E_TO + 1
# met les écarts des numéros sortis à 0
num$E_TO[b] <- 0
# met les écarts des étoiles sorties à 0
eto$E_TO[e] <- 0
}   # fin du test   if (flag_jour == TRUE)
else  {
# si le test du jour a raté
# afficher le tirage incriminé
print(a)
# et on arrête tout
break
}   # fin du else
}   # fin de la boucle  for (i in 1:XX)
summary(num$S_MA)
summary(num$S_VE)
summary(num$S_TO)
summary(eto$S_MA)
summary(eto$S_VE)
summary(eto$S_TO)
num
classe_num <- function() {
tibble(n = 1:50,
S_MA = round(cume_dist(num$S_MA) * 100),
S_VE = round(cume_dist(num$S_VE) * 100),
S_TO = round(cume_dist(num$S_TO) * 100),
E_MA = round(cume_dist(num$E_MA) * 100),
E_VE = round(cume_dist(num$E_VE) * 100),
E_TO = round(cume_dist(num$E_TO) * 100)
)
}
C_num <- classe_num()
print(C_num)
load("~/PROJETS/EM/euromil.RData")
library(tidyverse, quietly = TRUE, warn.conflicts = FALSE)
num <- tibble(n = 1:50,
S_MA = 0, S_VE = 0, S_TO = 0,
E_MA = 0, E_VE = 0, E_TO = 0)
eto <- tibble(n = 1:12,
S_MA = 0, S_VE = 0, S_TO = 0,
E_MA = 0, E_VE = 0, E_TO = 0)
for (i in 1:150) {
a <-
euromil |>
slice(i)
j <- a$jt
b <- c(a$b1, a$b2, a$b3, a$b4, a$b5)
e <- c(a$e1, a$e2)
# pour être sûr que les jours ne soient QUE MA ou VE
#   un petit test ne fait pas de mal
flag_jour <- FALSE
# pour les tirages du MArdi
if (j == "MA") {
flag_jour <- TRUE
# incrémente les sorties des numéros
num$S_MA[b] <- num$S_MA[b] + 1
# incrémente les sorties des étoiles
eto$S_MA[e] <- eto$S_MA[e] + 1
# incrémente tous les écarts des numéros
num$E_MA <- num$E_MA + 1
# incrémente tous les écarts des étoiles
eto$E_MA <- eto$E_MA + 1
# met les écarts des numéros sortis à 0
num$E_MA[b] <- 0
# met les écarts des étoiles sorties à 0
eto$E_MA[e] <- 0
}   # fin du test   if (j == "MA")
# pour les tirages du VEndredi
if (j == "VE") {
flag_jour <- TRUE
# incrémente les sorties des numéros
num$S_VE[b] <- num$S_VE[b] + 1
# incrémente les sorties des étoiles
eto$S_VE[e] <- eto$S_VE[e] + 1
# incrémente tous les écarts des numéros
num$E_VE <- num$E_VE + 1
# incrémente tous les écarts des étoiles
eto$E_VE <- eto$E_VE + 1
# met les écarts des numéros sortis à 0
num$E_VE[b] <- 0
# met les écarts des étoiles sorties à 0
eto$E_VE[e] <- 0
}   # fin du test   if (j == "VE")
# si c'est bien un MA ou un VE qui a été
#   traité avant
# traite les tirages en TOut
if (flag_jour == TRUE)  {
# incrémente les sorties des numéros
num$S_TO[b] <- num$S_TO[b] + 1
# incrémente les sorties des étoiles
eto$S_TO[e] <- eto$S_TO[e] + 1
# incrémente tous les écarts des numéros
num$E_TO <- num$E_TO + 1
# incrémente tous les écarts des étoiles
eto$E_TO <- eto$E_TO + 1
# met les écarts des numéros sortis à 0
num$E_TO[b] <- 0
# met les écarts des étoiles sorties à 0
eto$E_TO[e] <- 0
}   # fin du test   if (flag_jour == TRUE)
else  {
# si le test du jour a raté
# afficher le tirage incriminé
print(a)
# et on arrête tout
break
}   # fin du else
}   # fin de la boucle  for (i in 1:XX)
summary(num$S_MA)
summary(num$S_VE)
summary(num$S_TO)
summary(eto$S_MA)
summary(eto$S_VE)
summary(eto$S_TO)
num
classe_num <- function() {
tibble(n = 1:50,
S_MA = round(cume_dist(num$S_MA) * 100),
S_VE = round(cume_dist(num$S_VE) * 100),
S_TO = round(cume_dist(num$S_TO) * 100),
E_MA = round(cume_dist(num$E_MA) * 100),
E_VE = round(cume_dist(num$E_VE) * 100),
E_TO = round(cume_dist(num$E_TO) * 100)
)
}
C_num <- classe_num()
print(C_num)
load("~/PROJETS/EM/euromil.RData")
library(tidyverse, quietly = TRUE, warn.conflicts = FALSE)
num <- tibble(n = 1:50,
S_MA = 0, S_VE = 0, S_TO = 0,
E_MA = 0, E_VE = 0, E_TO = 0)
eto <- tibble(n = 1:12,
S_MA = 0, S_VE = 0, S_TO = 0,
E_MA = 0, E_VE = 0, E_TO = 0)
for (i in 1:150) {
a <-
euromil |>
slice(i)
j <- a$jt
b <- c(a$b1, a$b2, a$b3, a$b4, a$b5)
e <- c(a$e1, a$e2)
# pour être sûr que les jours ne soient QUE MA ou VE
#   un petit test ne fait pas de mal
flag_jour <- FALSE
# pour les tirages du MArdi
if (j == "MA") {
flag_jour <- TRUE
# incrémente les sorties des numéros
num$S_MA[b] <- num$S_MA[b] + 1
# incrémente les sorties des étoiles
eto$S_MA[e] <- eto$S_MA[e] + 1
# incrémente tous les écarts des numéros
num$E_MA <- num$E_MA + 1
# incrémente tous les écarts des étoiles
eto$E_MA <- eto$E_MA + 1
# met les écarts des numéros sortis à 0
num$E_MA[b] <- 0
# met les écarts des étoiles sorties à 0
eto$E_MA[e] <- 0
}   # fin du test   if (j == "MA")
# pour les tirages du VEndredi
if (j == "VE") {
flag_jour <- TRUE
# incrémente les sorties des numéros
num$S_VE[b] <- num$S_VE[b] + 1
# incrémente les sorties des étoiles
eto$S_VE[e] <- eto$S_VE[e] + 1
# incrémente tous les écarts des numéros
num$E_VE <- num$E_VE + 1
# incrémente tous les écarts des étoiles
eto$E_VE <- eto$E_VE + 1
# met les écarts des numéros sortis à 0
num$E_VE[b] <- 0
# met les écarts des étoiles sorties à 0
eto$E_VE[e] <- 0
}   # fin du test   if (j == "VE")
# si c'est bien un MA ou un VE qui a été
#   traité avant
# traite les tirages en TOut
if (flag_jour == TRUE)  {
# incrémente les sorties des numéros
num$S_TO[b] <- num$S_TO[b] + 1
# incrémente les sorties des étoiles
eto$S_TO[e] <- eto$S_TO[e] + 1
# incrémente tous les écarts des numéros
num$E_TO <- num$E_TO + 1
# incrémente tous les écarts des étoiles
eto$E_TO <- eto$E_TO + 1
# met les écarts des numéros sortis à 0
num$E_TO[b] <- 0
# met les écarts des étoiles sorties à 0
eto$E_TO[e] <- 0
}   # fin du test   if (flag_jour == TRUE)
else  {
# si le test du jour a raté
# afficher le tirage incriminé
print(a)
# et on arrête tout
break
}   # fin du else
}   # fin de la boucle  for (i in 1:XX)
recapMA <-  summary(num$S_MA)
recapVE <-  summary(num$S_VE)
recapTO <-  summary(num$S_TO)
summary(eto$S_MA)
summary(eto$S_VE)
summary(eto$S_TO)
num
classe_num <- function() {
tibble(n = 1:50,
S_MA = round(cume_dist(num$S_MA) * 100),
S_VE = round(cume_dist(num$S_VE) * 100),
S_TO = round(cume_dist(num$S_TO) * 100),
E_MA = round(cume_dist(num$E_MA) * 100),
E_VE = round(cume_dist(num$E_VE) * 100),
E_TO = round(cume_dist(num$E_TO) * 100)
)
}
C_num <- classe_num()
print(C_num)
load("~/PROJETS/EM/euromil.RData")
library(tidyverse, quietly = TRUE, warn.conflicts = FALSE)
num <- tibble(n = 1:50,
S_MA = 0, S_VE = 0, S_TO = 0,
E_MA = 0, E_VE = 0, E_TO = 0)
eto <- tibble(n = 1:12,
S_MA = 0, S_VE = 0, S_TO = 0,
E_MA = 0, E_VE = 0, E_TO = 0)
for (i in 1:150) {
a <-
euromil |>
slice(i)
j <- a$jt
b <- c(a$b1, a$b2, a$b3, a$b4, a$b5)
e <- c(a$e1, a$e2)
# pour être sûr que les jours ne soient QUE MA ou VE
#   un petit test ne fait pas de mal
flag_jour <- FALSE
# pour les tirages du MArdi
if (j == "MA") {
flag_jour <- TRUE
# incrémente les sorties des numéros
num$S_MA[b] <- num$S_MA[b] + 1
# incrémente les sorties des étoiles
eto$S_MA[e] <- eto$S_MA[e] + 1
# incrémente tous les écarts des numéros
num$E_MA <- num$E_MA + 1
# incrémente tous les écarts des étoiles
eto$E_MA <- eto$E_MA + 1
# met les écarts des numéros sortis à 0
num$E_MA[b] <- 0
# met les écarts des étoiles sorties à 0
eto$E_MA[e] <- 0
}   # fin du test   if (j == "MA")
# pour les tirages du VEndredi
if (j == "VE") {
flag_jour <- TRUE
# incrémente les sorties des numéros
num$S_VE[b] <- num$S_VE[b] + 1
# incrémente les sorties des étoiles
eto$S_VE[e] <- eto$S_VE[e] + 1
# incrémente tous les écarts des numéros
num$E_VE <- num$E_VE + 1
# incrémente tous les écarts des étoiles
eto$E_VE <- eto$E_VE + 1
# met les écarts des numéros sortis à 0
num$E_VE[b] <- 0
# met les écarts des étoiles sorties à 0
eto$E_VE[e] <- 0
}   # fin du test   if (j == "VE")
# si c'est bien un MA ou un VE qui a été
#   traité avant
# traite les tirages en TOut
if (flag_jour == TRUE)  {
# incrémente les sorties des numéros
num$S_TO[b] <- num$S_TO[b] + 1
# incrémente les sorties des étoiles
eto$S_TO[e] <- eto$S_TO[e] + 1
# incrémente tous les écarts des numéros
num$E_TO <- num$E_TO + 1
# incrémente tous les écarts des étoiles
eto$E_TO <- eto$E_TO + 1
# met les écarts des numéros sortis à 0
num$E_TO[b] <- 0
# met les écarts des étoiles sorties à 0
eto$E_TO[e] <- 0
}   # fin du test   if (flag_jour == TRUE)
else  {
# si le test du jour a raté
# afficher le tirage incriminé
print(a)
# et on arrête tout
break
}   # fin du else
}   # fin de la boucle  for (i in 1:XX)
recapMA <-  summary(num$S_MA)
recapVE <-  summary(num$S_VE)
recapTO <-  summary(num$S_TO)
summary(eto$S_MA)
summary(eto$S_VE)
summary(eto$S_TO)
num
classe_num <- function() {
tibble(n = 1:50,
S_MA = round(cume_dist(num$S_MA) * 100),
S_VE = round(cume_dist(num$S_VE) * 100),
S_TO = round(cume_dist(num$S_TO) * 100),
E_MA = round(cume_dist(num$E_MA) * 100),
E_VE = round(cume_dist(num$E_VE) * 100),
E_TO = round(cume_dist(num$E_TO) * 100)
)
}
C_num <- classe_num()
print(C_num)
load("~/PROJETS/EM/euromil.RData")
library(tidyverse, quietly = TRUE, warn.conflicts = FALSE)
num <- tibble(n = 1:50,
S_MA = 0, S_VE = 0, S_TO = 0,
E_MA = 0, E_VE = 0, E_TO = 0)
eto <- tibble(n = 1:12,
S_MA = 0, S_VE = 0, S_TO = 0,
E_MA = 0, E_VE = 0, E_TO = 0)
for (i in 1:150) {
a <-
euromil |>
slice(i)
j <- a$jt
b <- c(a$b1, a$b2, a$b3, a$b4, a$b5)
e <- c(a$e1, a$e2)
# pour être sûr que les jours ne soient QUE MA ou VE
#   un petit test ne fait pas de mal
flag_jour <- FALSE
# pour les tirages du MArdi
if (j == "MA") {
flag_jour <- TRUE
# incrémente les sorties des numéros
num$S_MA[b] <- num$S_MA[b] + 1
# incrémente les sorties des étoiles
eto$S_MA[e] <- eto$S_MA[e] + 1
# incrémente tous les écarts des numéros
num$E_MA <- num$E_MA + 1
# incrémente tous les écarts des étoiles
eto$E_MA <- eto$E_MA + 1
# met les écarts des numéros sortis à 0
num$E_MA[b] <- 0
# met les écarts des étoiles sorties à 0
eto$E_MA[e] <- 0
}   # fin du test   if (j == "MA")
# pour les tirages du VEndredi
if (j == "VE") {
flag_jour <- TRUE
# incrémente les sorties des numéros
num$S_VE[b] <- num$S_VE[b] + 1
# incrémente les sorties des étoiles
eto$S_VE[e] <- eto$S_VE[e] + 1
# incrémente tous les écarts des numéros
num$E_VE <- num$E_VE + 1
# incrémente tous les écarts des étoiles
eto$E_VE <- eto$E_VE + 1
# met les écarts des numéros sortis à 0
num$E_VE[b] <- 0
# met les écarts des étoiles sorties à 0
eto$E_VE[e] <- 0
}   # fin du test   if (j == "VE")
# si c'est bien un MA ou un VE qui a été
#   traité avant
# traite les tirages en TOut
if (flag_jour == TRUE)  {
# incrémente les sorties des numéros
num$S_TO[b] <- num$S_TO[b] + 1
# incrémente les sorties des étoiles
eto$S_TO[e] <- eto$S_TO[e] + 1
# incrémente tous les écarts des numéros
num$E_TO <- num$E_TO + 1
# incrémente tous les écarts des étoiles
eto$E_TO <- eto$E_TO + 1
# met les écarts des numéros sortis à 0
num$E_TO[b] <- 0
# met les écarts des étoiles sorties à 0
eto$E_TO[e] <- 0
}   # fin du test   if (flag_jour == TRUE)
else  {
# si le test du jour a raté
# afficher le tirage incriminé
print(a)
# et on arrête tout
break
}   # fin du else
}   # fin de la boucle  for (i in 1:XX)
summary(num$S_MA)
summary(num$S_VE)
summary(num$S_TO)
summary(eto$S_MA)
summary(eto$S_VE)
summary(eto$S_TO)
num
classe_num <- function() {
tibble(n = 1:50,
S_MA = round(cume_dist(num$S_MA) * 100),
S_VE = round(cume_dist(num$S_VE) * 100),
S_TO = round(cume_dist(num$S_TO) * 100),
E_MA = round(cume_dist(num$E_MA) * 100),
E_VE = round(cume_dist(num$E_VE) * 100),
E_TO = round(cume_dist(num$E_TO) * 100)
)
}
C_num <- classe_num()
print(C_num)
colors()
